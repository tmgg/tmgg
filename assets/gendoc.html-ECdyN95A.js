import{_ as s,c as a,a as p,o as e}from"./app-C10AcTCJ.js";const t={};function l(o,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h2 id="注入json请求的keys" tabindex="-1"><a class="header-anchor" href="#注入json请求的keys"><span>注入json请求的keys</span></a></h2><p>如果需要获取前端提交数据的keys</p><p>通常用于更新指定字段</p><p>可通过在controller的方法参数中增加 <code>RequestBodyKeys updateFields</code></p><p>示例</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">   @HasPermission</span>
<span class="line">   @PostMapping(&quot;save&quot;)</span>
<span class="line">   public AjaxResult save(@RequestBody T input, RequestBodyKeys updateFields) throws Exception {</span>
<span class="line">         service.saveOrUpdate(input,updateFields);</span>
<span class="line">       return AjaxResult.ok().msg(&quot;保存成功&quot;);</span>
<span class="line">   }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前后端交互式-分页从1开始" tabindex="-1"><a class="header-anchor" href="#前后端交互式-分页从1开始"><span>前后端交互式，分页从1开始</span></a></h2><h2 id="动态显示字段" tabindex="-1"><a class="header-anchor" href="#动态显示字段"><span>动态显示字段</span></a></h2><p>app端请求时隐藏字段， 如createUser，updateTime等字段</p><p>使用示例:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token annotation punctuation">@JsonIgnoreForApp</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> updateUser<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动填充字段" tabindex="-1"><a class="header-anchor" href="#自动填充字段"><span>自动填充字段</span></a></h2><p>页面显示通常会包含更多的字段，例如一个实体存了orgId，但希望显示orgLabel 通常会增加一个字段 orgLabel, 并使用@Transient注解标注，然后手动设置。 可以在orgId字段上使用自动注解 @AutoAppend</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line">    <span class="token annotation punctuation">@AutoAppendField</span><span class="token punctuation">(</span><span class="token class-name">AutoAppendOrgLabelStrategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> orgId<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Transient</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> orgLabel<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开发者可扩展，秩序实现AutoAppendStrategy接口， 目前内置的有</p><ul><li>AutoAppendDictLabelStrategy 字典名称</li><li>AutoAppendEnumLabelStrategy 枚举注释</li><li>AutoAppendFileViewUrlStrategy 文件预览地址</li><li>AutoAppendOrgLabelStrategy 机构名称</li><li>AutoAppendUserLabelStrategy 用户名称</li></ul><h2 id="更新指定字段" tabindex="-1"><a class="header-anchor" href="#更新指定字段"><span>更新指定字段</span></a></h2><p>对比save方法更新的时所有字段，改方法只更新指定字段</p><h2 id="数据库自动生成备注" tabindex="-1"><a class="header-anchor" href="#数据库自动生成备注"><span>数据库自动生成备注</span></a></h2><p>根据注解 @Msg</p><h2 id="id生成策略" tabindex="-1"><a class="header-anchor" href="#id生成策略"><span>id生成策略</span></a></h2><p>默认的id生成策略是uuid， 可通过实体类型上增加注解@CustomId改变</p><p>支持自定义前缀，长度，类型等</p><p>支持样式如下，具体可参考IdStyle枚举</p><ul><li>UUID</li><li>DATETIME_UUID</li><li>DATETIME_SEQ</li><li>DAILY_SEQ ：每日id从1重新计数。例子： 用户表，prefix=&quot;USR_&quot;, idStyle=DAILY_SEQ, length=16的情况 :USR_202504060001,USR_202504060002</li></ul><h2 id="时间范围" tabindex="-1"><a class="header-anchor" href="#时间范围"><span>时间范围</span></a></h2><p>前端可使用组件 FieldDateRange, 参考ISO 8601 时间间隔格式 存储格式：开始时间/结束时间 如：2023-01-01/2023-01-01 后端构造查询条件时，可使用</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">JpaQuery</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysLog</span><span class="token punctuation">&gt;</span></span> q<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">JpaQuery</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">q<span class="token punctuation">.</span><span class="token function">betweenIsoDateRange</span><span class="token punctuation">(</span><span class="token string">&quot;createTime&quot;</span><span class="token punctuation">,</span>dateRange<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统参数注解-dbvalue" tabindex="-1"><a class="header-anchor" href="#系统参数注解-dbvalue"><span>系统参数注解 @DbValue</span></a></h2><p>数据库有sys_config表，可使用注解 @DbValue，使用方法类似Spring的@Value注解。</p><p>如果在系统中修改了参数，也会实时重新修改字段的值</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">@DbValue(&quot;sys.sessionIdleTime&quot;)</span>
<span class="line">private int timeToIdleExpiration;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="会话" tabindex="-1"><a class="header-anchor" href="#会话"><span>会话</span></a></h2><p>框架使用session， 并缓存在内存或硬盘</p><p>代码中可直接使用HttpSession存储一些登录用户的数据</p><p>为什么使用session认证 为了集成一些第三方功能页面，如 ureport。 使用session后，不用再考虑集成认证。</p><h2 id="开放接口" tabindex="-1"><a class="header-anchor" href="#开放接口"><span>开放接口</span></a></h2><p>示例代码</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>api<span class="token punctuation">.</span>defaults</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>date<span class="token punctuation">.</span></span><span class="token class-name">DateUtil</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>field<span class="token punctuation">.</span></span><span class="token class-name">FieldInfo</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PingApi</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;测试连通性&quot;</span><span class="token punctuation">,</span> uri <span class="token operator">=</span> <span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> desc <span class="token operator">=</span> <span class="token string">&quot;示例接口，为了测试，会返回pong&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">ping</span><span class="token punctuation">(</span><span class="token annotation punctuation">@FieldInfo</span><span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">&quot;信息&quot;</span><span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token string">&quot;pong:&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;获得服务器时间&quot;</span><span class="token punctuation">,</span> uri <span class="token operator">=</span> <span class="token string">&quot;time&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">TimeInfo</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TimeInfo</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Data</span></span>
<span class="line">	<span class="token annotation punctuation">@AllArgsConstructor</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TimeInfo</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token annotation punctuation">@FieldInfo</span><span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">&quot;格式化时间&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token class-name">String</span> time<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token annotation punctuation">@FieldInfo</span><span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">&quot;时间戳&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">long</span> timestamp<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定时作业" tabindex="-1"><a class="header-anchor" href="#定时作业"><span>定时作业</span></a></h2><p>示例代码</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>job<span class="token punctuation">.</span>builtin</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>field<span class="token punctuation">.</span></span><span class="token class-name">FieldInfo</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>job<span class="token punctuation">.</span></span><span class="token class-name">JobDesc</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>tmgg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>job<span class="token punctuation">.</span></span><span class="token class-name">JobTool</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>quartz<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 示例作业</span>
<span class="line"> */</span></span>
<span class="line"><span class="token annotation punctuation">@DisallowConcurrentExecution</span> <span class="token comment">// 不允许并发则加这个注解</span></span>
<span class="line"><span class="token annotation punctuation">@JobDesc</span><span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">&quot;示例作业-发送系统状态&quot;</span><span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@FieldInfo</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">&quot;打印信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoJob</span> <span class="token keyword">implements</span> <span class="token class-name">Job</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">JobTool</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JobExecutionException</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始执行任务-邮件发送系统状态&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 获取参数</span></span>
<span class="line">        <span class="token class-name">JobDataMap</span> data <span class="token operator">=</span> <span class="token class-name">JobTool</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        e<span class="token punctuation">.</span><span class="token function">setResult</span><span class="token punctuation">(</span><span class="token string">&quot;结果：成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始化数据" tabindex="-1"><a class="header-anchor" href="#初始化数据"><span>初始化数据</span></a></h2><p>初始化的数据可以放到resources/database目录,系统启动时回自动解析保存入库</p><p>数据格式为json, key为实体名称，value为数据数组。每个字段都对应实体，如果字段是枚举，填写枚举值即可 例如</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;SysMenu&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;application&quot;</span><span class="token operator">:</span> <span class="token string">&quot;system&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sysOrg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;机构管理&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sysOrg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/system/org&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MENU&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ENABLE&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;visible&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Y&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ApartmentOutlined&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;seq&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>特殊字段</p><ul><li>$update true|false 控制数据是否更新</li><li>$pk String 默认是通过id来判断是否存在，以便判断是新增还是更新操作，如果想通过其他字段判断唯一性，如 $pk:&quot;code&quot;</li></ul>`,48)]))}const c=s(t,[["render",l]]),u=JSON.parse('{"path":"/gendoc.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"注入json请求的keys","slug":"注入json请求的keys","link":"#注入json请求的keys","children":[]},{"level":2,"title":"前后端交互式，分页从1开始","slug":"前后端交互式-分页从1开始","link":"#前后端交互式-分页从1开始","children":[]},{"level":2,"title":"动态显示字段","slug":"动态显示字段","link":"#动态显示字段","children":[]},{"level":2,"title":"自动填充字段","slug":"自动填充字段","link":"#自动填充字段","children":[]},{"level":2,"title":"更新指定字段","slug":"更新指定字段","link":"#更新指定字段","children":[]},{"level":2,"title":"数据库自动生成备注","slug":"数据库自动生成备注","link":"#数据库自动生成备注","children":[]},{"level":2,"title":"id生成策略","slug":"id生成策略","link":"#id生成策略","children":[]},{"level":2,"title":"时间范围","slug":"时间范围","link":"#时间范围","children":[]},{"level":2,"title":"系统参数注解 @DbValue","slug":"系统参数注解-dbvalue","link":"#系统参数注解-dbvalue","children":[]},{"level":2,"title":"会话","slug":"会话","link":"#会话","children":[]},{"level":2,"title":"开放接口","slug":"开放接口","link":"#开放接口","children":[]},{"level":2,"title":"定时作业","slug":"定时作业","link":"#定时作业","children":[]},{"level":2,"title":"初始化数据","slug":"初始化数据","link":"#初始化数据","children":[]}],"git":{"updatedTime":1748223969000,"contributors":[{"name":"姜涛","username":"","email":"410518072@qq.com","commits":2},{"name":"jiangtao","username":"jiangtao","email":"jiangtao.cctv@qq.com","commits":1,"url":"https://github.com/jiangtao"}],"changelog":[{"hash":"3db84e636db92650e6371c3d92a7f0f8a3095b9a","time":1748223969000,"email":"410518072@qq.com","author":"姜涛","message":"1.1.1 (#72)","tag":"v1.1.2"},{"hash":"859e84f9f513741f51ea295d6d172067809d0724","time":1747894481000,"email":"410518072@qq.com","author":"姜涛","message":"1.1.0 (#70)","coAuthors":[{"name":"jiangtao","email":"jiangtao.cctv@qq.com"}]}]},"filePathRelative":"gendoc.md"}');export{c as comp,u as data};
