import{_ as s,c as a,a as p,o as t}from"./app-Brlie9mU.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="支持参数设置" tabindex="-1"><a class="header-anchor" href="#支持参数设置"><span>支持参数设置</span></a></h1><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@JobDesc</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;示例作业-发送系统状态&quot;</span><span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@FieldDesc</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">&quot;接收邮箱&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoJob</span> <span class="token keyword">implements</span> <span class="token class-name">Job</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">JobTool</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JobExecutionException</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始执行任务-邮件发送系统状态&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 获取参数</span></span>
<span class="line">        <span class="token class-name">JobDataMap</span> data <span class="token operator">=</span> <span class="token class-name">JobTool</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> email <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>email<span class="token punctuation">,</span> <span class="token string">&quot;请填写邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 抛出异常</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收邮箱为：{}&quot;</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;空闲内存: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">readableFileSize</span><span class="token punctuation">(</span><span class="token class-name">SystemUtil</span><span class="token punctuation">.</span><span class="token function">getFreeMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;总内存：{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">readableFileSize</span><span class="token punctuation">(</span><span class="token class-name">SystemUtil</span><span class="token punctuation">.</span><span class="token function">getTotalMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模拟发送邮件中给 {} ,暂停3秒&quot;</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">ThreadUtil</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;任务结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/job.html","title":"定时作业","lang":"zh-CN","frontmatter":{"title":"定时作业"},"headers":[],"git":{"updatedTime":1745715745000,"contributors":[{"name":"jiangtao","username":"jiangtao","email":"jiangtao.cctv@qq.com","commits":1,"url":"https://github.com/jiangtao"}],"changelog":[{"hash":"7183b56fe4ba811be68707506350830a8d66080f","time":1745715745000,"email":"jiangtao.cctv@qq.com","author":"jiangtao","message":"init"}]},"filePathRelative":"job.md"}');export{i as comp,u as data};
