# https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish

on:
  workflow_dispatch:

  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: get project version
        id: pv
        run: |
          pv=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
          echo "::set-output name=pv::$pv"

      - name: get tmgg version
        id: tmgg-version
        run: |
          tmgg-version=$(mvn help:evaluate -Dexpression=tmgg.version -q -DforceStdout)
          echo "::set-output name=tmgg-version::$tmgg-version"

      - name: get git tag version
        id: tv
        uses: revam/gh-action-get-tag-and-version@v1
        with:
          tag: ${{ github.ref }}

      - name: 检查tmgg.version是否修改
        if: ${{ steps.pv.outputs.pv != steps.tmgg-version.outputs.tmgg-version}}
        with:
          script: core.setFailed('依赖版本不一致  project version:${{steps.pv.outputs.pv}} dependencyManagement version:${{steps.tmgg-version.outputs.tmgg-version}} ')

      - name: Check Tag version
        if: ${{ steps.pv.outputs.pv != steps.tv.outputs.version_short}}
        uses: actions/github-script@v4
        with:
          script: core.setFailed('Invalid Tag:${{github.ref_name}} project version:${{steps.pv.outputs.pv}} tag version:${{steps.tv.outputs.version_short}} ')



      - name: Publish MAVEN
        run: mvn -q deploy
        #run: 'echo 模拟deploy'
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE_KEY }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: publish to npm
        run: |
          cd web-monorepo 
          pnpm install -r
          pnpm publish -r --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_ACCESS_TOKEN}}

